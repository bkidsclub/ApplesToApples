var _user$project$Main$unselectedApple = {
	ctor: '::',
	_0: _seanhess$elm_style$Style$color('#00FF00'),
	_1: {ctor: '[]'}
};
var _user$project$Main$selectedApple = {
	ctor: '::',
	_0: _seanhess$elm_style$Style$color('#FF0000'),
	_1: {ctor: '[]'}
};
var _user$project$Main$address = 'ws://127.0.0.1:8123/';
var _user$project$Main$Model = F8(
	function (a, b, c, d, e, f, g, h) {
		return {player: a, name: b, green: c, hand: d, submitted: e, judging: f, winner: g, score: h};
	});
var _user$project$Main$init = {
	ctor: '_Tuple2',
	_0: A8(
		_user$project$Main$Model,
		0,
		'',
		'',
		{
			ctor: '::',
			_0: 'nadya',
			_1: {
				ctor: '::',
				_0: 'is',
				_1: {
					ctor: '::',
					_0: 'the',
					_1: {
						ctor: '::',
						_0: 'best',
						_1: {ctor: '[]'}
					}
				}
			}
		},
		'',
		false,
		'',
		0),
	_1: _elm_lang$core$Platform_Cmd$none
};
var _user$project$Main$ServerMsg = function (a) {
	return {ctor: 'ServerMsg', _0: a};
};
var _user$project$Main$subscriptions = function (model) {
	return A2(_elm_lang$websocket$WebSocket$listen, _user$project$Main$address, _user$project$Main$ServerMsg);
};
var _user$project$Main$SubmitID = function (a) {
	return {ctor: 'SubmitID', _0: a};
};
var _user$project$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		switch (_p0.ctor) {
			case 'Select':
				var _p1 = _p0._0;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{submitted: _p1}),
					_1: A2(
						_elm_lang$websocket$WebSocket$send,
						_user$project$Main$address,
						A2(
							_elm_lang$core$Json_Encode$encode,
							0,
							_elm_lang$core$Json_Encode$object(
								{
									ctor: '::',
									_0: {
										ctor: '_Tuple2',
										_0: 'id',
										_1: _elm_lang$core$Json_Encode$int(model.player)
									},
									_1: {
										ctor: '::',
										_0: {
											ctor: '_Tuple2',
											_0: 'red',
											_1: _elm_lang$core$Json_Encode$string(_p1)
										},
										_1: {ctor: '[]'}
									}
								})))
				};
			case 'Winner':
				var _p2 = _p0._0;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{winner: _p2}),
					_1: A2(
						_elm_lang$websocket$WebSocket$send,
						_user$project$Main$address,
						A2(
							_elm_lang$core$Json_Encode$encode,
							0,
							_elm_lang$core$Json_Encode$object(
								{
									ctor: '::',
									_0: {
										ctor: '_Tuple2',
										_0: 'id',
										_1: _elm_lang$core$Json_Encode$int(model.player)
									},
									_1: {
										ctor: '::',
										_0: {
											ctor: '_Tuple2',
											_0: 'winner',
											_1: _elm_lang$core$Json_Encode$string(_p2)
										},
										_1: {ctor: '[]'}
									}
								})))
				};
			case 'EnterName':
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{name: _p0._0}),
					_1: _elm_lang$core$Platform_Cmd$none
				};
			case 'SubmitName':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: A2(
						_elm_lang$core$Random$generate,
						_user$project$Main$SubmitID,
						A2(_elm_lang$core$Random$int, 0, 999999999))
				};
			case 'SubmitID':
				var _p3 = _p0._0;
				return {
					ctor: '_Tuple2',
					_0: _elm_lang$core$Native_Utils.update(
						model,
						{player: _p3}),
					_1: A2(
						_elm_lang$websocket$WebSocket$send,
						_user$project$Main$address,
						A2(
							_elm_lang$core$Json_Encode$encode,
							0,
							_elm_lang$core$Json_Encode$object(
								{
									ctor: '::',
									_0: {
										ctor: '_Tuple2',
										_0: 'id',
										_1: _elm_lang$core$Json_Encode$int(_p3)
									},
									_1: {
										ctor: '::',
										_0: {
											ctor: '_Tuple2',
											_0: 'name',
											_1: _elm_lang$core$Json_Encode$string(model.name)
										},
										_1: {ctor: '[]'}
									}
								})))
				};
			default:
				return {ctor: '_Tuple2', _0: model, _1: _elm_lang$core$Platform_Cmd$none};
		}
	});
var _user$project$Main$SubmitName = {ctor: 'SubmitName'};
var _user$project$Main$EnterName = function (a) {
	return {ctor: 'EnterName', _0: a};
};
var _user$project$Main$Winner = function (a) {
	return {ctor: 'Winner', _0: a};
};
var _user$project$Main$Select = function (a) {
	return {ctor: 'Select', _0: a};
};
var _user$project$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$div,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('Apples to Apples'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$div,
					{ctor: '[]'},
					_elm_lang$core$Native_Utils.eq(model.player, 0) ? {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$input,
							{
								ctor: '::',
								_0: _elm_lang$html$Html_Events$onInput(_user$project$Main$EnterName),
								_1: {ctor: '[]'}
							},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text('Lunch'),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$button,
								{
									ctor: '::',
									_0: _elm_lang$html$Html_Events$onClick(_user$project$Main$SubmitName),
									_1: {ctor: '[]'}
								},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('go'),
									_1: {ctor: '[]'}
								}),
							_1: {ctor: '[]'}
						}
					} : {
						ctor: '::',
						_0: A2(
							_elm_lang$html$Html$div,
							{ctor: '[]'},
							{
								ctor: '::',
								_0: _elm_lang$html$Html$text(
									A2(
										_elm_lang$core$Basics_ops['++'],
										'player is ',
										A2(
											_elm_lang$core$Basics_ops['++'],
											model.name,
											A2(
												_elm_lang$core$Basics_ops['++'],
												' : ',
												_elm_lang$core$Basics$toString(model.player))))),
								_1: {ctor: '[]'}
							}),
						_1: {
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$div,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text(model.green),
									_1: {ctor: '[]'}
								}),
							_1: {
								ctor: '::',
								_0: _elm_lang$core$Native_Utils.eq(
									_elm_lang$core$String$length(model.submitted),
									0) ? A2(
									_elm_lang$html$Html$div,
									{ctor: '[]'},
									A2(
										_elm_lang$core$List$map,
										function (card) {
											return A2(
												_elm_lang$html$Html$button,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Events$onClick(
														_user$project$Main$Select(card)),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: _elm_lang$html$Html$text(card),
													_1: {ctor: '[]'}
												});
										},
										model.hand)) : A2(
									_elm_lang$html$Html$div,
									{ctor: '[]'},
									A2(
										_elm_lang$core$List$map,
										function (card) {
											return A2(
												_elm_lang$html$Html$button,
												{
													ctor: '::',
													_0: _elm_lang$html$Html_Attributes$style(
														_elm_lang$core$Native_Utils.eq(model.submitted, card) ? _user$project$Main$selectedApple : _user$project$Main$unselectedApple),
													_1: {ctor: '[]'}
												},
												{
													ctor: '::',
													_0: _elm_lang$html$Html$text(card),
													_1: {ctor: '[]'}
												});
										},
										model.hand)),
								_1: {ctor: '[]'}
							}
						}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Main$main = _elm_lang$html$Html$program(
	{init: _user$project$Main$init, view: _user$project$Main$view, update: _user$project$Main$update, subscriptions: _user$project$Main$subscriptions})();
